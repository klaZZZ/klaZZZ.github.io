{"meta":{"title":"KLA","subtitle":null,"description":null,"author":"KLA","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"AJAX","slug":"AJAX","date":"2017-07-20T16:29:54.000Z","updated":"2017-07-20T16:30:10.438Z","comments":true,"path":"2017/07/21/AJAX/","link":"","permalink":"http://yoursite.com/2017/07/21/AJAX/","excerpt":"","text":"模板引擎 引入模板1&lt;script src=&quot;template.js&quot;&gt;&lt;/script&gt; 简洁语法 编写模板12345678910&lt;script id=&quot;test&quot; type=&quot;text/html&quot;&gt;&lt;h1&gt;&#123;&#123;title&#125;&#125;&lt;/h1&gt;&lt;ul&gt; &#123;&#123;each list as value i&#125;&#125; &lt;li&gt;索引 &#123;&#123;i + 1&#125;&#125; ：&#123;&#123;value&#125;&#125;&lt;/li&gt; &#123;&#123;/each&#125;&#125;&lt;/ul&gt;&lt;/script&gt;``` &gt; 渲染数据 var data = { title: ‘标签’, list: [‘文艺’, ‘博客’, ‘摄影’, ‘电影’, ‘民谣’, ‘旅行’, ‘吉他’]};var html = template(‘test’, data);document.getElementById(‘content’).innerHTML = html;12345678910### jQuery.ajax 常用参数``` $.serialize() 序列化表单 格式化key=val$key=valurl 接口地址type 请求方式默认值&quot;GET&quot;timeout 请求超时dataType 服务器返回格式data 发送请求数据beforSend: function() &#123;&#125; 请求发起前调用success:function() &#123;&#125; 成功响应后的回调函数 jQuery.cookie123456789101112131415//设置cookie$.cookie(&apos;name&apos;, &apos;value&apos;)//设置七天后失效$.cookie(&apos;name&apos;, &apos;value&apos;, &#123;expires: 7&#125;);//设置生效的路径$.cookie(&apos;name&apos;, &apos;value&apos;, &#123;expires: 7, path: &apos;/&apos;&#125;);//读取cookie$.cookie(&apos;name&apos;); //value$.cookie(&apos;nothing&apos;) //underfined//读取所有cookie$.cookie//删除cookie //return true when cookie was successfully deleted, otherwise false$.removeCookie(&apos;name&apos;) // true$.removeCookie(&apos;nothing&apos;) // false JSON```JSON.parse()//解析一个JSON格式的字符串, 返回一个对象JSON.stringify()//解析一个对象, 返回一个字符串","categories":[],"tags":[]},{"title":"闭包详解","slug":"闭包详解","date":"2017-07-19T14:04:28.000Z","updated":"2017-07-19T14:04:28.058Z","comments":true,"path":"2017/07/19/闭包详解/","link":"","permalink":"http://yoursite.com/2017/07/19/闭包详解/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-07-19T12:55:47.095Z","updated":"2017-07-19T15:22:50.016Z","comments":true,"path":"2017/07/19/hello-world/","link":"","permalink":"http://yoursite.com/2017/07/19/hello-world/","excerpt":"","text":"github + hexogithub 提供的是 服务器 以及 域名 hexo 是用来写博客（纯静态的博客） 没有数据库，没有后台代码！ hexo可以将写博客的工作进行简化，你只需要写markdown文件（这个文件中会包含一些信息，比如文章的分类，文章的标签，文章标题，文章的创建时间！），hexo会负责将你的markdown文件转换成html文件 写博客前的准备需要的软件 markdown编辑器（可有可无） node（hexo的运行环境） 装完node npm会自动帮你装好 npm: node package manager 常用的所有资源都可以使用npm来安装（jQuery，bootstrap, angular, vue） 还可以装工具包（i5ting_toc, hexo, live-server） npm下载所有的包，默认都是从国外的服务器下载的！ 安装一个淘宝的cnpm npm install -g cnpm –registry=https://registry.npm.taobao.org cnpm 的命令和npm完全一致 2.1 使用npm下载内容 cnpm install 包名称 -g git 步骤 安装node 通过npm来安装hexo npm install hexo -g 装完hexo之后，就可以在命令行使用hexo命令了！ 使用hexo init 初始化一个博客 使用hexo server 在本地预览你的博客 修改完md文件（sources/_posts/*.md） 之后 要使用 hexo g 来生成html 新建一篇文章 hexo new “文章标题”","categories":[],"tags":[]}]}